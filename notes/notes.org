* Typing
** Incremental
*** TODO 2015 - Type-Driven Incremental Semantic Parsing with Polymorphism
 :PROPERTIES:
  :Custom_ID: Zhao_2015
  :AUTHOR: Zhao \& Huang
  :JOURNAL: Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies
  :YEAR: 2015
  :VOLUME: 
  :PAGES: 
  :DOI: 10.3115/v1/n15-1162
  :URL: http://dx.doi.org/10.3115/v1/n15-1162
 :INTERLEAVE_PDF: ~/Documents/papers/pdfs/N15-1162.pdf
 :END:

cite:Zhao_2015

I think this requires types up front.


*** TODO 1991 - Incremental polymorphism
 :PROPERTIES:
  :Custom_ID: aditya91_increm
  :AUTHOR: Aditya \& Nikhil
  :JOURNAL: 
  :YEAR: 1991
  :VOLUME: 
  :PAGES: 379--405
  :DOI: 
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/2329610_Incremental-Polymorphism.pdf
 :END:

cite:aDitya91_increm

*** TODO 2015 - A co-contextual formulation of type rules and its application to incremental type checking
 :PROPERTIES:
  :Custom_ID: erdweg2015co
  :AUTHOR: Erdweg, Bra\vcevac, Kuci, Krebs \& Mezini
  :JOURNAL: 
  :YEAR: 2015
  :VOLUME: 50
  :PAGES: 880--897
  :DOI: 
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/cocontextual-type-checking.pdf
 :END:

cite:erdweg2015co

** TODO 2012 - Type-Directed Completion of Partial Expressions
 :PROPERTIES:
  :Custom_ID: perelman12_type_direc_compl_partial_expres
  :AUTHOR: Perelman, Gulwani, Ball \& Grossman
  :JOURNAL: 
  :YEAR: 2012
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: https://www.microsoft.com/en-us/research/publication/type-directed-completion-partial-expressions/
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/pldi12-type-directed-completion.pdf
 :END:

cite:perelman12_type_direc_compl_partial_expres

** TODO 2015 - A type-directed approach to program repair
 :PROPERTIES:
  :Custom_ID: reinking15
  :AUTHOR: Reinking \& Piskac
  :JOURNAL: 
  :YEAR: 2015
  :VOLUME: 
  :PAGES: 511--517
  :DOI: 
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/ReinkingPiskac2015Winston.pdf
 :END:

cite:reinking15

** TODO 1986 - Using dependent types to express modular structure
 :PROPERTIES:
  :Custom_ID: macqueen1986using
  :AUTHOR: MacQueen
  :JOURNAL: 
  :YEAR: 1986
  :VOLUME: 
  :PAGES: 277--286
  :DOI: 
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/10.1.1.84.7792.pdf
 :END:

cite:macqueen1986using

** TODO 2017 - On Polymorphic Sessions and Functions: A Tale of Two (Fully Abstract) Encodings
 :PROPERTIES:
  :Custom_ID: toninho17_polym_session_funct
  :AUTHOR: Bernardo Toninho \& Nobuko Yoshida
  :JOURNAL: 
  :YEAR: 2017
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: https://www.doc.ic.ac.uk/~bparente/polyfun.pdf
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/polyfun.pdf
 :END:

cite:toninho17_polym_session_funct

Via [[https://twitter.com/graydon_pub][Graydon Hoare's Twitter feed]]


** Things for Alpaca, etc
Ideas I'd like to understand more to drive projects like [[http://alpaca-lang.org][Alpaca]] and some possible follow up work.

*** TODO - 1ML – Core and Modules United (F-ing First-Class Modules)
 :PROPERTIES:
  :Custom_ID: rossberg
  :AUTHOR: Andreas Rossberg
  :JOURNAL: 
  :YEAR: 
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: https://people.mpi-sws.org/~rossberg/1ml/1ml-jfp-draft.pdf
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/1ml-jfp-draft.pdf
 :END:      

cite:rossberg
*** TODO 2016 - Polymorphism, Subtyping, and Type Inference in Mlsub
 :PROPERTIES:
  :Custom_ID: DolanMycroft_2016
  :AUTHOR: Dolan
  :JOURNAL:  
  :YEAR: 2016
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/mlsub-preprint.pdf
 :END:      

cite:DolanMycroft_2016
*** TODO 2014 - Counter-Factual Typing for Debugging Type Error
 :PROPERTIES:
  :Custom_ID: chen_erwig_2014
  :AUTHOR: Sheng Chen
  :JOURNAL: 
  :YEAR: 2014
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: http://web.engr.orst.edu/~erwig/papers/CF-Typing_POPL14.pdf
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/CF-Typing_POPL14.pdf
 :END:
cite:chen_erwig_2014
*** TODO 2014 - Extending Type Inference to Variational Programs
 :PROPERTIES:
  :Custom_ID: Chen:2014:ETI:2597180.2518190
  :AUTHOR: Chen, Erwig \& Walkingshaw
  :JOURNAL: ACM Trans. Program. Lang. Syst.
  :YEAR: 2014
  :VOLUME: 36
  :PAGES: 1:1--1:54
  :DOI: 10.1145/2518190
  :URL: http://doi.acm.org/10.1145/2518190
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/VLC-TypeSystem.pdf
 :END:

cite:Chen:2014:ETI:2597180.2518190
[[pdf-view:~/Documents/papers/pdfs/VLC-TypeSystem.pdf]]
*** TODO 2014 - F-ing modules
 :PROPERTIES:
  :Custom_ID: rossberg_russo_dreyer_2014
  :AUTHOR: ROSSBERG, RUSSO \& DREYER
  :JOURNAL: Journal of Functional Programming
  :YEAR: 2014
  :VOLUME: 24
  :PAGES: 529–607
  :DOI: 10.1017/S0956796814000264
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/f-ing-jfp.pdf
 :END:

cite:rossberg_russo_dreyer_2014

*** TODO 2015 - An Introduction to Algebraic Effects and Handlers. Invited tutorial paper
 :PROPERTIES:
  :Custom_ID: DBLP:journals/entcs/Pretnar15
  :AUTHOR: Matija Pretnar
  :JOURNAL: Electr. Notes Theor. Comput. Sci.
  :YEAR: 2015
  :VOLUME: 319
  :PAGES: 19--35
  :DOI: 10.1016/j.entcs.2015.12.003
  :URL: https://doi.org/10.1016/j.entcs.2015.12.003
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/handlers-tutorial.pdf
 :END:

cite:DBLP:journals/entcs/Pretnar15



* Data

** Data Flow
*** TODO 2015 - The Dataflow Model: A Practical Approach To Balancing Correctness, Latency, and Cost in Massive-Scale, Unbounded, Out-Of-Order Data Processing
 :PROPERTIES:
  :Custom_ID: akidau15_dataf_model
  :AUTHOR: Tyler Akidau {\it et al.}
  :JOURNAL: Proceedings of the VLDB Endowment
  :YEAR: 2015
  :VOLUME: 8
  :PAGES: 1792-1803
  :DOI: 
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p1792-Akidau.pdf
 :END:

cite:akidau15_dataf_model

[[https://medium.com/db-journal/readings-in-stream-processing-675210ad9eb2][Leo wrote a post about this]]

*** TODO 2013 - Naiad: A Timely Dataflow System
 :PROPERTIES:
  :Custom_ID: murray13_naiad
  :AUTHOR: Murray, McSherry, Isaacs, Isard, Barham \& Abadi
  :JOURNAL: 
  :YEAR: 2013
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: https://www.microsoft.com/en-us/research/publication/naiad-a-timely-dataflow-system-2/
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/naiad.pdf
 :END:

cite:murray13_naiad

*** TODO 2013 - Differential dataflow
 :PROPERTIES:
  :Custom_ID: mcsherry13_differ
  :AUTHOR: McSherry, Murray, Isaacs \& Isard
  :JOURNAL: 
  :YEAR: 2013
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: https://www.microsoft.com/en-us/research/publication/differential-dataflow/
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/differentialdataflow.pdf
 :END:

cite:mcsherry13_differ

** Privacy/Information Hiding
*** TODO 2007 - An Ad Omnia Approach to Defining and Achieving Private Data Analysis
 :PROPERTIES:
  :Custom_ID: dwork07_ad_omnia_approac_defin_achiev
  :AUTHOR: Dwork
  :JOURNAL: 
  :YEAR: 2007
  :VOLUME: 4890
  :PAGES: 1-13
  :DOI: 
  :URL: https://www.microsoft.com/en-us/research/publication/an-ad-omnia-approach-to-defining-and-achieving-private-data-analysis/
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/dwork_pinkdd.pdf
 :END:

cite:dwork07_ad_omnia_approac_defin_achiev
*** TODO 2017 - Towards Practical Differential Privacy for Sql Queries
 :PROPERTIES:
  :Custom_ID: johnson17_towar_pract_differ_privac_sql_queries
  :AUTHOR: Noah Johnson, Joseph Near \& Dawn Song
  :JOURNAL: 
  :YEAR: 2017
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: 
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p526-johnson.pdf
 :END:

cite:johnson17_towar_pract_differ_privac_sql_queries
** General
*** TODO 2016 - The Snowflake Elastic Data Warehouse
 :PROPERTIES:
  :Custom_ID: dageville16_snowf_elast_data_wareh
  :AUTHOR: Dageville {\it et al.}
  :JOURNAL: 
  :YEAR: 2016
  :VOLUME: 
  :PAGES: 215--226
  :DOI: 10.1145/2882903.2903741
  :URL: https://doi.org/10.1145/2882903.2903741
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/Snowflake_SIGMOD.pdf
 :END:

cite:dageville16_snowf_elast_data_wareh

*** TODO 2005 - Semantic-Integration Research in the Database Community
 :PROPERTIES:
  :Custom_ID: doan05_seman_integ_resear_datab_commun
  :AUTHOR: Doan \& Halevy
  :JOURNAL: AI Mag.
  :YEAR: 2005
  :VOLUME: 26
  :PAGES: 83--94
  :DOI: 
  :URL: http://dl.acm.org/citation.cfm?id=1090488.1090497
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/1801-1797-1-PB.pdf
 :END:

cite:doan05_seman_integ_resear_datab_commun

*** TODO 2017 - Concurrent Log-Structured Memory for Many-Core Key-Value Stores
 :PROPERTIES:
  :Custom_ID: alexander17_concur_log_struc_memor_many
  :AUTHOR: Alexander Merritt
  :JOURNAL: 
  :YEAR: 2017
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: http://www.vldb.org/pvldb/vol11/p458-merritt.pdf
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p458-merritt.pdf
 :END:

cite:alexander17_concur_log_struc_memor_many
 
Mention of fragmentation concerns and effective use of memory is interesting.

*** TODO 2017 - Cardinality Estimation: An Experimental Survey
 :PROPERTIES:
  :Custom_ID: harmouch17_cardin_estim
  :AUTHOR: Hazar Harmouch \& Felix Naumann
  :JOURNAL: 
  :YEAR: 2017
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: http://www.vldb.org/pvldb/vol11/p499-harmouch.pdf
   :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p499-harmouch.pdf
 :END:

cite:harmouch17_cardin_estim

**** TODO 2006 - Bitmap Algorithms for Counting Active Flows on High-Speed Links
 :PROPERTIES:
  :Custom_ID: estan06_bitmap_algor_count_activ_flows
  :AUTHOR: Cristian Estan, George Varghese \& Michael Fisk
  :JOURNAL: {IEEE/ACM} Trans. Netw.
  :YEAR: 2006
  :VOLUME: 14
  :PAGES: 925-937
  :DOI: 10.1145/1217709
  :URL: https://doi.org/10.1145/1217709
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/countingbitmaps.pdf
 :END:

cite:estan06_bitmap_algor_count_activ_flows

*** TODO 2018 - BzTree: A High-Performance Latch-free Range Index for Non-Volatile Memory
 :PROPERTIES:
  :Custom_ID: arulraj18_bztree
  :AUTHOR: Joy Arulraj
  :JOURNAL: 
  :YEAR: 2018
  :VOLUME: 
  :PAGES: 
  :DOI:
  :URL: http://www.vldb.org/pvldb/vol11/p553-arulraj.pdf
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p553-arulraj.pdf
 :END:

cite:arulraj18_bztree

*** TODO 2018 - Theoretically Optimal and Empirically Efficient R-trees with Strong Parallelizability
 :PROPERTIES:
  :Custom_ID: jianzhong18_theor_optim_empir_effic_r_stron_paral
  :AUTHOR: Jianzhong Qi \& Rui Zhang
  :JOURNAL: 
  :YEAR: 2018
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: http://www.vldb.org/pvldb/vol11/p621-qi.pdf
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p621-qi.pdf
 :END:

cite:jianzhong18_theor_optim_empir_effic_r_stron_paral

*** TODO 2018 - Contention-Aware Lock Scheduling for Transactional Databases
 :PROPERTIES:
  :Custom_ID: boyu18_conten_aware_lock_sched_trans_datab
  :AUTHOR: Boyu Tian
  :JOURNAL: 
  :YEAR: 2018
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: http://www.vldb.org/pvldb/vol11/p648-tian.pdf
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p648-tian.pdf
 :END:

cite:boyu18_conten_aware_lock_sched_trans_datab

**** TODO References for other places lock scheduling is used?

** TODO 2006 - Linear Abadi and Plotkin Logic
 :PROPERTIES:
  :Custom_ID: DBLP:journals/corr/abs-cs-0611004
  :AUTHOR: Lars Birkedal, Rasmus Ejlers M\ogelberg \& Rasmus Lerchedahl Petersen
  :JOURNAL: CoRR
  :YEAR: 2006
  :VOLUME: abs/cs/0611004
  :PAGES: 
  :DOI: 
  :URL: http://arxiv.org/abs/cs/0611004
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/0611004.pdf
 :END:

cite:DBLP:journals/corr/abs-cs-0611004

** TODO 1993 - History of Programming Languages Conference (HOPL-II), Preprints, Cambridge, Massachusetts, USA, April 20-23, 1993
 :PROPERTIES:
  :Custom_ID: DBLP:conf/hopl/1993
  :AUTHOR: John Lee \& Jean Sammet
  :JOURNAL: 
  :YEAR: 1993
  :VOLUME: 
  :PAGES: 
  :DOI: 
  :URL: http://dl.acm.org/citation.cfm?id=154766
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/birth-of-prolog.pdf
 :END:

cite:DBLP:conf/hopl/1993

* Software Engineering
** TODO 2001 - Robustness in complex systems
 :PROPERTIES:
  :Custom_ID: gribble2001robustness
  :AUTHOR: Gribble
  :JOURNAL: 
  :YEAR: 2001
  :VOLUME: 
  :PAGES: 21--26
  :DOI: 
  :URL: 
 :END:      

cite:gribble2001robustness

* Databases

** TODO 2011 - Efficiently Compiling Efficient Query Plans for Modern Hardware
 :PROPERTIES:
  :Custom_ID: Neumann:2011:ECE:2002938.2002940
  :AUTHOR: Neumann
  :JOURNAL: Proc. VLDB Endow.
  :YEAR: 2011
  :VOLUME: 4
  :PAGES: 539--550
  :DOI: 10.14778/2002938.2002940
  :URL: http://dx.doi.org/10.14778/2002938.2002940
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p539-neumann.pdf
 :END:

cite:Neumann:2011:ECE:2002938.2002940


** TODO 2014 - Building Efficient Query Engines in a High-level Language
 :PROPERTIES:
  :Custom_ID: Klonatos:2014:BEQ:2732951.2732959
  :AUTHOR: Klonatos, Koch, Rompf \& Chafi
  :JOURNAL: Proc. VLDB Endow.
  :YEAR: 2014
  :VOLUME: 7
  :PAGES: 853--864
  :DOI: 10.14778/2732951.2732959
  :URL: http://dx.doi.org/10.14778/2732951.2732959
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/p853-klonatos.pdf
 :END:

cite:Klonatos:2014:BEQ:2732951.2732959

* Distributed Systems
** TODO 1985 - Distributed Snapshots: Determining Global States of a Distributed System
 :PROPERTIES:
  :Custom_ID: distributed-snapshots-determining-global-states-distributed-system
  :AUTHOR: Chandy \& Lamport
  :JOURNAL: ACM Transactions on Computer Systems
  :YEAR: 1985
  :VOLUME: 3/1
  :PAGES: 63-75
  :DOI: 
  :URL: https://www.microsoft.com/en-us/research/publication/distributed-snapshots-determining-global-states-distributed-system/
  :INTERLEAVE_PDF: ~/Documents/papers/pdfs/chandy.pdf
 :END:

cite:distributed-snapshots-determining-global-states-distributed-system

* Non-interleave Papers
Trying out org-pdfview on its own.
#+BEGIN_SRC 
package-install org-pdfview
(require 'org-pdfview)
#+END_SRC

** Embedding F
[[http://homepages.inf.ed.ac.uk/slindley/papers/embedding-f.pdf][Source]]
[[pdfview:~/Documents/papers/pdfs/embedding-f.pdf][PDF]]

** Mison: A Fast JSON Parser for Data Analytics
[[https://www.microsoft.com/en-us/research/publication/mison-fast-json-parser-data-analytics/][Source]]
[[pdfview:~/Documents/papers/pdfs/mison-vldb17.pdf][PDF]]

** Anna: A KVS for Any Scale
[[http://db.cs.berkeley.edu/jmh/papers/anna_ieee18.pdf][Source]]
[[pdfview:~/Documents/papers/pdfs/anna_ieee18.pdf]]

** Eon Mode: Bringing the Vertica Columnar Database to the Cloud
[[https://www.vertica.com/wp-content/uploads/2018/05/Vertica_EON_SIGMOD_Paper.pdf][Source]]
[[pdfview:~/Documents/papers/pdfs/Vertica_EON_SIGMOD_Paper.pdf][PDF]]

** Calvin: Fast Distributed Transactions for Partitioned Database Systems
[[http://cs.yale.edu/homes/thomson/publications/calvin-sigmod12.pdf][Source]]
[[pdfview:~/Documents/papers/pdfs/calvin-sigmod12.pdf]]

** SCOPE: Easy and Efficient Parallel Processing of Massive Data Sets
[[http://www.vldb.org/pvldb/1/1454166.pdf][Source]]
[[pdfview:~/Documents/papers/pdfs/1454166.pdf]]

** Computation Reuse in Analytics Job Service at Microsoft
[[https://www.microsoft.com/en-us/research/uploads/prod/2018/03/cloudviews-sigmod2018.pdf][Source]]
[[pdfview:~/Documents/papers/pdfs/cloudviews-sigmod2018.pdf]]

** Selecting Subexpressions to Materialize at Datacenter Scale
[[https://www.microsoft.com/en-us/research/uploads/prod/2018/03/bigsubs-vldb2018.pdf][Source]]
[[pdfview:~/Documents/papers/pdfs/bigsubs-vldb2018.pdf]]

** Building Efficient Query Engines in a High-Level Language
[[http://www.vldb.org/pvldb/vol7/p853-klonatos.pdf]]
[[pdfview:~/Documents/papers/pdfs/p853-klonatos.pdf]]

** A Short Introduction to Systems F and Fω
[[http://babel.ls.fi.upm.es/~pablo/Papers/Notes/f-fw.pdf]]

** How OCaml type checker works -- or what polymorphism and garbage collection have in common
:CUSTOM_ID: how-ocaml-type-checker-works
#+BEGIN_QUOTE
#+END_QUOTE
[[http://okmij.org/ftp/ML/generalization.html]]

** Objects and Aspects: Row Polymorphism
[[https://www.cs.cmu.edu/~neelk/rows.pdf]]
https://www.cs.cmu.edu/~aldrich/courses/819/slides/rows.pdf

** Understanding and Evolving the ML Module System (Thesis Summary)
[[https://pdfs.semanticscholar.org/4691/26957c42e1377fb39db04f2cc9af182dbcc6.pdf]]

Talks about what "sealing" and translucency are.

** Focusing on Pattern Matching
[[https://www.cl.cam.ac.uk/~nk480/pattern-popl09.pdf]]

** Extension of ML Type System with a sorted equational theory on types
Referenced by Oleg's [[#how-ocaml-type-checker-works][How OCaml type checker works]]

[[https://www.classes.cs.uchicago.edu/archive/2007/spring/32001-1/papers/eq-theory-on-types.pdf]]

** Fungi: A typed, functional language for programs that dynamically name their own cached dependency graphs

[[http://matthewhammer.org/fungi-lang-2018.pdf]]
Via https://twitter.com/graydon_pub

** SIMD Intrinsics on Managed Language Runtimes
https://astojanov.github.io/publications/preprint/004_cgo18-simd.pdf

** Generalized Data Structure Synthesis
https://homes.cs.washington.edu/~mernst/pubs/generalized-synthesis-icse2018.pdf

** Resource Aware ML
http://www.raml.co/interface.html

** Behavioural Types for Actor Systems
https://arxiv.org/abs/1206.1687

** The Gamma Database Machine Project
http://pages.cs.wisc.edu/~dewitt/includes/paralleldb/ieee90.pdf

** Life beyond Distributed Transactions:  an Apostate’s Opinion
http://adrianmarriott.net/logosroot/papers/LifeBeyondTxns.pdf

** Singly  typed  actors  in  Agda
(Master's thesis)
https://www.dropbox.com/s/lczrcqu2m9p6osv/Master_Thesis.pdf?dl=0

** PLDI '18
http://www.sigplan.org/OpenTOC/pldi18.html

** Sigmod 2018
https://sigmod2018.org/program_sigmod.shtml


** Program Synthesis from Polymorphic Refinement Types
http://people.csail.mit.edu/polikarn/publications/pldi16.pdf

** λir : A language with intensional receive
https://lib.dr.iastate.edu/cgi/viewcontent.cgi?article=7205&context=etd

** Mailbox Types for Unordered Interactions
https://arxiv.org/pdf/1801.04167.pdf

** An Introduction to Algebraic Effects and Handlers
[[http://www.eff-lang.org/handlers-tutorial.pdf]]
[[pdfview:~/Documents/papers/pdfs/handlers-tutorial.pdf]]

[[https://github.com/ocamllabs/ocaml-effects-tutorial#1-algebraic-effects-and-handlers][Concurrent Programming with Effect Handlers]], OCaml intro.

** What Is Algebraic About Algebraic Effects And Handlers?
https://arxiv.org/pdf/1807.05923.pdf

Looks a little math-heavy but interesting.
** Algebraic effects for Functional Programming
[[https://www.microsoft.com/en-us/research/publication/algebraic-effects-for-functional-programming/]]
[[pdfview:~/Documents/papers/pdfs/algeff-tr-2016-v3.pdf]]

From Daan Leijen.

*** TODO Leijen has done a bunch of work with row types, iirc some module system work?


** Survey on bidirectional typing
https://semantic-domain.blogspot.com/2019/08/new-draft-paper-survey-on-bidirectional.html

** Bidirectional typing "tutorial"
http://www.davidchristiansen.dk/tutorials/bidirectional.pdf

** Lecture notes on bidirectional typing
http://www.cs.cmu.edu/~fp/courses/15312-f04/handouts/15-bidirectional.pdf

** 1ML
[[pdfview:~/Documents/papers/pdfs/1ml-jfp-draft.pdf]]

** VMs
A sub-reading list in prelude to starting on some Bad Ideas.
*** JIT
**** HHVM JIT: A Profile-Guided, Region-Based Compiler for PHP and Hack
[[https://research.fb.com/publications/hhvm-jit-a-profile-guided-region-based-compiler-for-php-and-hack/][Home]]
[[https://research.fb.com/wp-content/uploads/2018/04/hhvm-jit-a-profile-guided-region-based-compiler-for-php-and-hack.pdf][Source]]

More:  [[https://hhvm.com/blog/2017/03/23/concurrent-jit-compilation.html][Concurrent JIT Compilation]]

**** Self-Optimizing AST Interpreters (Truffle)
[[http://lafo.ssw.uni-linz.ac.at/papers/2012_DLS_SelfOptimizingASTInterpreters.pdf][Source]]
**** An Object Storage Model for the Truffle Language Implementation Framework
[[https://chrisseaton.com/rubytruffle/pppj14-om/pppj14-om.pdf][Source]]
**** One VM to Rule Them All
[[http://lafo.ssw.uni-linz.ac.at/papers/2013_Onward_OneVMToRuleThemAll.pdf][Source]]
**** Practical Partial Evaluation for High-Performance Dynamic Language Runtimes
[[https://chrisseaton.com/rubytruffle/pldi17-truffle/pldi17-truffle.pdf][Source]]
**** Stuff from Self
Comes up a bunch in Truffle and HHVM.  What else follows on to this work?
***** One compiler: deoptimization to optimized code
[[https://dl.acm.org/citation.cfm?doid=3033019.3033025][ACM Source]]
***** Optimizing Dynamically-Dispatched Calls with Run-Time Type Feedback
[[https://www.cs.ucsb.edu/~urs/oocsb/papers/pldi94.pdf][Source]]
***** Debugging Optimized Code with Dynamic Deoptimization
[[http://www.cs.ucsb.edu/~urs/oocsb/papers/pldi92.pdf][Source]]
*** Clustering, Networking
**** Partisan: Enabling Cloud-Scale Erlang Applications
[[https://arxiv.org/abs/1802.02652][arXiv source]]
*** Garbage Collection and Memory
**** One Pass Real-Time Generational Mark-Sweep Garbage Collection
1995 paper
[[http://citeseerx.ist.psu.edu/viewdoc/summary;jsessionid=0397570F246B379399EB5A3FDDFF2C5E?doi=10.1.1.42.7791][CiteSeer source]]
[[http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=8F3E31F1F87009E032F2500EFB3D13F1?doi=10.1.1.42.7791&rep=rep1&type=pdf][CiteSeer cached PDF source]]

Additional blogs:
- [[https://prog21.dadgum.com/16.html][Garbage Collection in Erlang]]
- [[https://hamidreza-s.github.io/erlang%20garbage%20collection%20memory%20layout%20soft%20realtime/2015/08/24/erlang-garbage-collection-details-and-why-it-matters.html][Erlang Garbage Collection Details and Why It Matters]]
**** Efficient Memory Management for Message-Passing Concurrency Part I: Single-threaded execution
[[http://user.it.uu.se/~jesperw/publications/Wilhelmsson_lic.pdf][Source]]
Static message analysis to see if a message /should/ end up in the shared heap.  AST node profiling to do this?  Breaks in many situations if history is not kept.
*** Functions, etc
**** Debunking the 'Expensive Procedure Call' Myth, or, Procedure Call Implementations Considered Harmful, or, Lambda: The Ultimate GOTO
[[https://dspace.mit.edu/handle/1721.1/5753][Home]]
[[https://dspace.mit.edu/bitstream/handle/1721.1/5753/AIM-443.pdf?sequence=2][Source]]
** Rows and typing
*** From [[https://www.cl.cam.ac.uk/teaching/1415/L28/][U of Cambridge's Advanced FP course]]
https://www.cl.cam.ac.uk/teaching/1415/L28/rows.pdf
*** A polymorphic type system for extensible records and variants
http://www.cs.cmu.edu/~aldrich/courses/819/papers/row-poly.pdf
